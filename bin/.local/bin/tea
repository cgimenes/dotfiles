#!/bin/bash

CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

_normalize() {
  cat | tr ' .:' '-' | tr '[:upper:]' '[:lower:]'
}

session_name() {
  if [ "$1" = "--directory" ]; then
    shift
    basename "$@" | _normalize
  elif [ "$1" = "--full-path" ]; then
    shift
    echo "$@" | _normalize | sed 's/\/$//'
  elif [ "$1" = "--short-path" ]; then
    shift
    echo "$(echo "${@%/*}" | sed -r 's;/([^/]{1,2})[^/]*;/\1;g' | _normalize)/$(basename "$@" | _normalize)"
  else
    echo "Wrong argument, you can use --directory, --full-path or --short-path, got $1"
    return 1
  fi
}

HOME_REPLACER=""                                          # default to a noop
TILDE_REPLACER=""                                         # default to a noop
echo "$HOME" | grep -E "^[a-zA-Z0-9\-_/.@]+$" &>/dev/null # chars safe to use in sed
HOME_SED_SAFE=$?
if [ $HOME_SED_SAFE -eq 0 ]; then # $HOME should be safe to use in sed
  HOME_REPLACER="s|^$HOME|~|"
  TILDE_REPLACER="s|^~|$HOME|"
fi

# Usage: t <optional zoxide-like dir, relative or absolute path>
# If no argument is given, a combination of existing sessions and a zoxide query will be displayed in a FZF

# Parse optional argument
if [ "$*" ]; then
  # Argument is given
  eval "$(zoxide init bash)"
  RESULT=$(z "$*" && pwd)
fi

# Makes sure tmux is running in order to get all the correct tmux options below. Gets cleaned at the bottom
if ! tmux info &>/dev/null; then
  TMP_SESSION_DIR=$(mktemp -d)
  TMP_SESSION_NAME=$(session_name --full-path "$TMP_SESSION_DIR")
  tmux new-session -d -s "$TMP_SESSION_NAME" -c "$TMP_SESSION_DIR"
fi

# Get or create session
if [[ $RESULT == *":"* ]]; then
  # RESULT comes from list-sessions or list-windows
  SESSION=$(echo "$RESULT" | awk '{print $1}')
  SESSION=${SESSION//:/}
  if [ "$SELECT_WINDOW" == "on" ]; then
    WINDOW=$(echo "$RESULT" | awk -F"[()]" '{print $(NF-1)}')
  fi
else
  # RESULT is a path

  DIR_FULL=$(echo "$RESULT" | sed -e "$TILDE_REPLACER")
  DIR_WITH_TILDE=$(echo "$RESULT" | sed -e "$HOME_REPLACER") # in case it came from a direct usage of `t <path>`

  # Quit if directory does not exists
  if [ ! -d "$DIR_FULL" ]; then
    exit 0
  fi

  # Promote rank in zoxide.
  zoxide add "$DIR_FULL"

  SESSION=$(session_name --directory "$DIR_WITH_TILDE")

  if ! tmux has-session -t="$SESSION" 2>/dev/null; then
    tmux new-session -d -s "$SESSION" -c "$DIR_FULL"
  fi
fi

# Clean up tmp session
if [[ -n "$TMP_SESSION_NAME" ]]; then
  tmux kill-session -t "$TMP_SESSION_NAME" 2>/dev/null
  rm -rf "$TMP_SESSION_DIR"
fi

# Attach to session
# Escape tilde which if it appears by itself, tmux will interpret as a marked target
# https://github.com/tmux/tmux/blob/master/cmd-find.c#L1024C51-L1024C57
SESSION=$(echo "$SESSION" | sed 's/^~$/\\~/')
if [ -z "$TMUX" ]; then
  tmux attach -t "$SESSION"
else
  tmux switch-client -t "$SESSION"
fi

if [ -n "$WINDOW" ]; then
  tmux select-window -t "$SESSION:$WINDOW"
fi
